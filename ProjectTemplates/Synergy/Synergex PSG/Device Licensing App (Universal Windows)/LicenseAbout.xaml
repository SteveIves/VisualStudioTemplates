<Page
    x:Name="pageRoot"
    x:Class="$safeprojectname$.LicenseAbout"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:$safeprojectname$"
    xmlns:common="using:$safeprojectname$.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition/>
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="3*" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition x:Name="leftBorder" Width="1*" />
            <ColumnDefinition x:Name="centerPanel" Width="8*" />
            <ColumnDefinition x:Name="rightBorder" Width="1*" />
        </Grid.ColumnDefinitions>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <!-- Wide View -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource LargeWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="leftBorder.Width" Value="3*"/>
                        <Setter Target="centerPanel.Width" Value="4*"/>
                        <Setter Target="rightBorder.Width" Value="3*"/>
                        <Setter Target="secondPanel.(Grid.Row)" Value="0"/>
                        <Setter Target="secondPanel.(Grid.Column)" Value="1"/>
                        <Setter Target="secondPanel.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="firstPanel.(Grid.ColumnSpan)" Value="1"/>
                    </VisualState.Setters>
                </VisualState>
                <!-- Medium View -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="leftBorder.Width" Value="2*"/>
                        <Setter Target="centerPanel.Width" Value="6*"/>
                        <Setter Target="rightBorder.Width" Value="2*"/>
                        <Setter Target="secondPanel.(Grid.Row)" Value="0"/>
                        <Setter Target="secondPanel.(Grid.Column)" Value="1"/>
                        <Setter Target="secondPanel.(Grid.ColumnSpan)" Value="1"/>
                        <Setter Target="firstPanel.(Grid.ColumnSpan)" Value="1"/>
                    </VisualState.Setters>
                </VisualState>
                <!-- Narrow View -->
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MinWindowSnapPoint}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="leftBorder.Width" Value="1*"/>
                        <Setter Target="centerPanel.Width" Value="18*"/>
                        <Setter Target="rightBorder.Width" Value="1*"/>
                        <Setter Target="secondPanel.(Grid.Row)" Value="1"/>
                        <Setter Target="secondPanel.(Grid.Column)" Value="0"/>
                        <Setter Target="secondPanel.(Grid.ColumnSpan)" Value="2"/>
                        <Setter Target="firstPanel.(Grid.ColumnSpan)" Value="2"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <TextBlock Grid.Row="1" Grid.Column="1"  Text="License Information" Style="{StaticResource TitleTextBlockStyle}" HorizontalAlignment="Center" />

        <Grid Grid.Row="2" Grid.Column="1">

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="1"  Orientation="Vertical" Margin="0,0,10,0" x:Name="firstPanel">

                <TextBlock Text="Username" Margin="0,5,0,0" />
                <TextBox Name="tokenBox" IsReadOnly="True" Margin="0,5,0,0" />

                <TextBlock Text="Device description" Margin="0,5,0,0" />
                <TextBox Name="descriptionBox" IsReadOnly="True" Margin="0,5,0,0" />

                <TextBlock Text="License status" Margin="0,5,0,0" />
                <TextBox Name="statusBox" IsReadOnly="True" Margin="0,5,0,0" />

                <CheckBox x:Name="chkTransferrable" Margin="0,5,0,0" IsEnabled="False">Transferrable</CheckBox>

            </StackPanel>

            <StackPanel Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="1" Orientation="Vertical" x:Name="secondPanel">

                <TextBlock Text="License activated" Margin="0,5,0,0" />
                <TextBox Name="activatedBox" IsReadOnly="True" Margin="0,5,0,0" />

                <TextBlock Text="Must sync before" Margin="0,5,0,0" />
                <TextBox x:Name="expireBox" IsReadOnly="True" Margin="0,5,0,0" />

                <TextBlock Text="Subscription expires" Margin="0,5,0,0" />
                <TextBox x:Name="subBox" IsReadOnly="True" Margin="0,5,0,0" />

            </StackPanel>

        </Grid>

        <StackPanel Grid.Row="3" Grid.Column="1" Orientation="Horizontal" Margin="0,10,0,0" HorizontalAlignment="Center">
            <Button Name="btnSynchronize" Content="Synch" Width="100" Margin="0,0,10,0" Click="btnSynchronize_Click"/>
            <Button x:Name="btnDeactivate" Content="Deactivate" Width="120" Margin="0,0,10,0" Click="btnDeactivate_Click"/>
            <Button x:Name="btnCopyDebugData" Content="Debug" Width="100" Click="btnCopyDebugData_Click"/>
        </StackPanel>

    </Grid>

</Page>
